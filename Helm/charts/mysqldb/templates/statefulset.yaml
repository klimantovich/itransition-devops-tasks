apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysqldb.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "mysqldb.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mysqldb.headlessSvcName" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "mysqldb.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "mysqldb.configmapName" . }}
                  key: db_name
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "mysqldb.secretName" . }}
                  key: db_password
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: {{ .Values.containerPortName }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.livinessProbe }}
          livenessProbe:
            {{- toYaml .Values.livinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
            - name: {{ .Values.persistentStorage.name }}
              mountPath: {{ .Values.persistentStorage.mountPath }}  
      {{- if .Values.volumes }}
      volumes:
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistentStorage.name }}
      spec:
        accessModes: ["{{ .Values.persistentStorage.accessMode }}"]
        resources:
          requests:
            storage: {{ .Values.persistentStorage.storage }}
